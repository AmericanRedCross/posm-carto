# == Global project settings ===========================================

name:             'POSM (Portable OpenStreetMap)'
description:      'POSM style based on the American Red Cross HDM style, ported from TileMill2 (Mapbox Studio Classic) back to TileMill1 for offline rendering'
attribution:      'Map Data Â© OpenStreetMap'
center:           [ 85.3, 27.7, 14]
format:           png
interactivity:    false
minzoom:          1
maxzoom:          24
srs:              '+proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0.0 +k=1.0 +units=m +nadgrids=@null +wktext +no_defs +over'
metatile:         2


# == Layer & Datasource defaults =======================================

_layer_default:   &layer
  'srs-name':     '3857'
  srs:            '+proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0.0 +k=1.0 +units=m +nadgrids=@null +wktext +no_defs +over'

_pg_default:      &postgis
  type:           postgis
  dbname:         '{{PGDATABASE}}'
  host:           '{{PGHOST}}'
  user:           '{{PGUSER}}'
  password:       '{{PGPASSWORD}}'
  port:           '{{PGPORT}}'
  geometry_field: way
  srid:           3857
  extent:         '-20037508.34,-20037508.34,20037508.34,20037508.34'
  srs:            '+proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0.0 +k=1.0 +units=m +nadgrids=@null +wktext +no_defs +over'

_shp_default:     &shapefile
  type:           shape
  estimate_extent: false
  extent:         '-20037508.34,-20037508.34,20037508.34,20037508.34'
  srs:            '+proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0.0 +k=1.0 +units=m +nadgrids=@null +wktext +no_defs +over'

# == Stylesheets =======================================================

Stylesheet:
  - vars.mss
  - bg.mss
  - road.mss
  - label.mss
  - poi_classic.mss
  - hdm.mss


# == Layers ============================================================

Layer:


  - <<: *layer
    name: ne_10m_rivers_lake_centerlines_scale_rank
    id:   ne_10m_rivers_lake_centerlines_scale_rank
    properties:
      minzoom: 4
      maxzoom: 8
    Datasource:
      <<: *postgis
      geometry_field: geom
      table: ne_10m_rivers_lake_centerlines_scale_rank
      encoding: "ISO-8859-1"

  - <<: *layer
    name: ne_10m_lakes
    id:   ne_10m_lakes
    properties:
      minzoom: 5
      maxzoom: 8
    Datasource:
      <<: *postgis
      geometry_field: geom
      table: ne_10m_lakes
      encoding: "ISO-8859-1"

  - <<: *layer
    name: ne_10m_admin_0_boundary_lines_land
    id:   ne_10m_admin_0_boundary_lines_land
    class: country-boundary-10m
    properties:
      minzoom: 2
      maxzoom: 9
    Datasource:
      <<: *postgis
      geometry_field: geom
      table: ne_10m_admin_0_boundary_lines_land

  - <<: *layer
    name: ne-roads
    id:   ne-roads
    properties:
      minzoom: 5
      maxzoom: 8
      cache-features: on
    Datasource:
      <<: *postgis
      geometry_field: geom
      table: ne_10m_roads

  - <<: *layer
    name: landuse
    id:   landuse
    geometry: "polygon"
    Datasource:
      <<: *postgis
      geometry_field: way
      table: >
        (
          SELECT
            way,
            name,
            CASE WHEN leisure = 'common' OR landuse = 'village_green' THEN 'common'
                 WHEN leisure IN ('park','nature_reserve') THEN 'park'
                 WHEN leisure = 'garden' THEN 'garden'
                 WHEN leisure = 'pitch' THEN 'pitch'
                 WHEN leisure IN ('playground','recreation_ground') THEN 'playground'
                 WHEN leisure = 'stadium' THEN 'stadium'
                 WHEN amenity = 'parking' THEN 'parking'
                 WHEN landuse = 'cemetery' THEN 'cemetery'
                 WHEN landuse = 'allotments' THEN 'garden'
                 WHEN landuse = 'industrial' THEN 'industrial'
                 WHEN landuse IN ('farmland','farm','farmyard','orchard','aquaculture') THEN 'agriculture'
                 WHEN landuse = 'forest' OR "natural" = 'wood' THEN 'wood'
                 WHEN landuse IN ('grass','greenfield','meadow') OR "natural" IN ('grass','grassland') THEN 'grass'
                 WHEN "natural" IN ('rock','bare_rock') THEN 'rock'
                 WHEN "natural" = 'sand' THEN 'sand'
                 WHEN "natural" = 'glacier' THEN 'glacier'
                 WHEN "natural" = 'scrub' THEN 'scrub'
                 ELSE '' END as class
          FROM planet_osm_polygon
          WHERE way && !bbox!
            AND (landuse IS NOT NULL
            OR  leisure IS NOT NULL
            OR  amenity = 'parking'
            OR "natural" IS NOT NULL)
        ) AS _
  - <<: *layer
    name: site
    id:   site
    geometry: "polygon"
    properties:
      minzoom: 12
    Datasource:
      <<: *postgis
      geometry_field: way
      table: >
        (
          SELECT
            way,
            name,
            CASE WHEN amenity = 'shelter' OR tags->'shelter' = 'yes' THEN 'shelter'
                 WHEN tags->'refugee' = 'yes' OR tags->'idp:camp_site' = 'spontaneous_camp' THEN 'camp'
                 WHEN landuse = 'residential' THEN 'residential'
                 WHEN leisure = 'common' THEN 'common'
                 WHEN landuse = 'brownfield' THEN 'rubble'
                 WHEN tags->'hazard' = 'landslide' THEN 'landslide'
                 ELSE '' END as class
          FROM planet_osm_polygon
          WHERE way && !bbox!
            AND (amenity = 'shelter'
            OR landuse IN ('residential','brownfield')
            OR tags->'shelter' = 'yes'
            OR tags->'refugee' = 'yes'
            OR tags->'idp:camp_site' = 'spontaneous_camp'
            OR leisure = 'common'
            OR tags->'hazard' = 'landslide')
        ) AS _
  - <<: *layer
    name: site_line
    id:   site_line
    geometry: "linestring"
    properties:
      minzoom: 12
    Datasource:
      <<: *postgis
      geometry_field: way
      table: >
        (
          SELECT
            way,
            name,
            CASE WHEN amenity = 'shelter' OR tags->'shelter' = 'yes' THEN 'shelter'
                 WHEN tags->'refugee' = 'yes' OR tags->'idp:camp_site' = 'spontaneous_camp' THEN 'camp'
                 WHEN landuse = 'residential' THEN 'residential'
                 WHEN leisure = 'common' THEN 'common'
                 WHEN landuse = 'brownfield' THEN 'rubble'
                 WHEN tags->'hazard' = 'landslide' THEN 'landslide'
                 ELSE '' END as class
          FROM planet_osm_line
          WHERE way && !bbox!
            AND (amenity = 'shelter'
            OR landuse IN ('residential','brownfield')
            OR tags->'shelter' = 'yes'
            OR tags->'refugee' = 'yes'
            OR tags->'idp:camp_site' = 'spontaneous_camp'
            OR leisure = 'common'
            OR tags->'hazard' = 'landslide')
        ) AS _
  - <<: *layer
    name: waterway
    id:   waterway
    geometry: "linestring"
    Datasource:
      <<: *postgis
      geometry_field: way
      table: >
        (
          SELECT
            way,
            name,
            waterway AS class
          FROM planet_osm_line
          WHERE way && !bbox!
          AND waterway IS NOT NULL
        ) AS _
  - <<: *layer
    name: water
    id:   water
    geometry: "polygon"
    Datasource:
      <<: *postgis
      geometry_field: way
      table: >
        (
          SELECT
            way,
            name,
            CASE WHEN water IS NOT NULL THEN water
                 WHEN landuse = 'reservoir' THEN 'reservoir'
                 WHEN waterway = 'riverbank' THEN 'riverbank'
                 ELSE 'water' END as class
          FROM planet_osm_polygon
          WHERE way && !bbox!
          AND water IS NOT NULL
          OR landuse = 'reservoir'
          OR waterway = 'riverbank'
          OR "natural" = 'water'
        ) AS _
  - <<: *layer
    name: coastline_water
    id:   coastline_water
    geometry: "polygon"
    Datasource:
      <<: *shapefile
      file: shp/water_polygons.shp
  - <<: *layer
    name: water_features
    id:   water_features
    geometry: "polygon"
    Datasource:
      <<: *postgis
      geometry_field: way
      table: >
        (
          SELECT
            way,
            man_made
          FROM planet_osm_line
          WHERE way && !bbox!
          AND man_made IN ('pier', 'breakwater', 'groyne')
          UNION ALL
          SELECT
            way,
            man_made
          FROM planet_osm_polygon
          WHERE way && !bbox!
          AND man_made IN ('pier', 'breakwater', 'groyne')
        ) AS _
  - <<: *layer
    name: water_barriers
    id:   water_barriers
    geometry: "polygon"
    Datasource:
      <<: *postgis
      geometry_field: way
      table: >
        (
          SELECT
            way,
            name,
            waterway
          FROM planet_osm_line
          WHERE way && !bbox!
          AND waterway IN ('dam', 'weir', 'lock_gate')
          UNION ALL
          SELECT
            way,
            name,
            waterway
          FROM planet_osm_polygon
          WHERE way && !bbox!
          AND waterway IN ('dam', 'weir', 'lock_gate')
        ) AS _
  - <<: *layer
    name: barrier_line
    id:   barrier_line
    geometry: "linestring"
    Datasource:
      <<: *postgis
      geometry_field: way
      table: >
        (
          SELECT
            way,
            name,
            CASE WHEN barrier IS NOT NULL THEN barrier
                 ELSE 'cliff' END AS class
          FROM planet_osm_line
          WHERE way && !bbox!
          AND ("natural" = 'cliff'
          OR barrier IN ('hedge', 'fence', 'gate','wall'))
        ) AS _
  - <<: *layer
    name: aeroway
    id:   aeroway
    geometry: "polygon"
    Datasource:
      <<: *postgis
      geometry_field: way
      table: >
        (
          SELECT
            way,
            name,
            aeroway as type
          FROM planet_osm_line
          WHERE way && !bbox!
            AND aeroway IN ('runway','taxiway')
          UNION ALL
          SELECT
            way,
            name,
            aeroway as type
          FROM planet_osm_polygon
          WHERE way && !bbox!
            AND aeroway IN ('aerodrome','runway','taxiway','helipad','apron')
        ) AS _
          ORDER BY CASE
            WHEN type = 'aerodrome' THEN 1
            WHEN type = 'apron' THEN 2
            WHEN type = 'taxiway' THEN 3
            WHEN type = 'runway' THEN 4
            WHEN type = 'helipad' THEN 5
          END ASC
  - <<: *layer
    name: road_area
    id:   road_area
    geometry: "polygon"
    properties:
      minzoom: 10
    Datasource:
      <<: *postgis
      geometry_field: way
      table: >
        (
          SELECT
            way,
            name,
            highway as type
          FROM planet_osm_polygon
          WHERE way && !bbox!
          AND highway IN ('pedestrian','footway','service','residential')
        ) AS _
  - <<: *layer
    name: building
    id:   building
    properties:
      minzoom: 12
    geometry: "polygon"
    Datasource:
      <<: *postgis
      geometry_field: way
      table: >
        (
          SELECT
            way,
            name,
            CASE WHEN building IS NOT NULL THEN building
                 ELSE aeroway END AS type
          FROM planet_osm_polygon
          WHERE way && !bbox!
          AND (building IS NOT NULL
          OR aeroway IN ('terminal','hangar'))
        ) AS _
  - <<: *layer
    name: building_condition
    id:   building_condition
    properties:
      minzoom: 12
    geometry: "polygon"
    Datasource:
      <<: *postgis
      geometry_field: way
      table: >
        (
          SELECT
            way,
            name,
            CASE WHEN building = 'construction' THEN 'construction'
                 WHEN tags->'damage' IN ('moderate','extensive','severe') THEN 'damaged'
                 WHEN tags->'damage' IN ('total','destroyed','collapsed','collapse','partially_collapsed') OR building IN ('collapsed','collapse') THEN 'damaged'
                 WHEN tags->'damage' = 'flooded' THEN 'flooded'
                 ELSE '' END as class
          FROM planet_osm_polygon
          WHERE way && !bbox!
            AND (building IN ('construction','collapsed','collapse')
            OR tags->'damage' IN ('moderate','extensive','severe','total','destroyed','collapsed','collapse','partially_collapsed','flooded'))
        ) AS _
  - <<: *layer
    name: landuse_overlay
    id:   landuse_overlay
    geometry: "polygon"
    properties:
      minzoom: 10
    Datasource:
      <<: *postgis
      geometry_field: way
      table: >
        (
          SELECT
            way,
            name,
            CASE WHEN "natural" IN ('wetland','marsh','swamp','bog') OR wetland IN ('wetland','marsh','swamp','bog') THEN 'wetland'
                 WHEN "natural" IN ('mud','tidalflat') OR wetland IN ('mud','tidalflat') THEN 'wetland_noveg'
                 ELSE '' END as class
          FROM planet_osm_polygon
          WHERE way && !bbox!
          AND ("natural" IN ('wetland','marsh','swamp','bog','mud','tidalflat')
          OR wetland IN ('wetland','marsh','swamp','bog','mud','tidalflat'))
        ) AS _
  - <<: *layer
    name: tunnel
    id:   tunnel
    geometry: "linestring"
    properties:
      minzoom: 8
    Datasource:
      <<: *postgis
      geometry_field: way
      table: >
        (
          SELECT
            way,
            name,
            highway as type,
            access
          FROM planet_osm_line
          WHERE way && !bbox!
          AND (tunnel = 'yes' OR tunnel = 'building_massage' OR covered = 'yes')
          AND highway IN ('motorway','motorway_link','trunk','trunk_link','primary','primary_link','secondary','secondary_link','tertiary','tertiary_link','road','path','track','service','footway','bridleway','cycleway','steps','pedestrian','living_street','unclassified','residential','raceway')
        ) AS _
  - <<: *layer
    name: road
    id:   road
    geometry: "linestring"
    properties:
      minzoom: 8
    Datasource:
      <<: *postgis
      geometry_field: way
      table: >
        (
          SELECT * FROM (
            SELECT
              way,
              name,
              highway as type,
              access,
              aerialway
            FROM planet_osm_line
            WHERE way && !bbox!
            AND (tunnel IS NULL OR NOT tunnel IN ('yes', 'building_passage'))
            AND (covered IS NULL OR NOT covered = 'yes')
            AND (bridge IS NULL OR NOT bridge IN ('yes', 'boardwalk', 'cantilever', 'covered', 'low_water_crossing', 'movable', 'trestle', 'viaduct'))
            AND (highway IN ('motorway','motorway_link','trunk','trunk_link','primary','primary_link','secondary','secondary_link','tertiary','tertiary_link','road','path','track','service','footway','bridleway','cycleway','steps','pedestrian','living_street','unclassified','residential','raceway')
            OR aerialway IN ('chair_lift','mixed_lift','drag_lift','platter','t-bar','magic_carpet','gondola','cable_car','rope_tow','zip_line','j-bar','canopy'))
          ) AS features
          JOIN (VALUES
              ('motorway', 380),
              ('trunk', 370),
              ('primary', 360),
              ('secondary', 350),
              ('tertiary', 340),
              ('residential', 330),
              ('unclassified', 330),
              ('road', 330),
              ('living_street', 320),
              ('pedestrian', 310),
              ('raceway', 300),
              ('motorway_link', 240),
              ('trunk_link', 230),
              ('primary_link', 220),
              ('secondary_link', 210),
              ('tertiary_link', 200),
              ('service', 150),
              ('track', 110),
              ('path', 100),
              ('footway', 100),
              ('bridleway', 100),
              ('cycleway', 100),
              ('steps', 100)
            ) AS ordertable (type, prio)
            USING (type)
          ORDER BY
            prio
        ) AS _
  - <<: *layer
    name: railway
    id:   railway
    geometry: "linestring"
    properties:
      minzoom: 8
    Datasource:
      <<: *postgis
      geometry_field: way
      table: >
        (
          SELECT
            way,
            name,
            railway as type,
            tunnel,
            access
          FROM planet_osm_line
          WHERE way && !bbox!
          AND railway IS NOT NULL
        ) AS _
  - <<: *layer
    name: bridge
    id:   bridge
    geometry: "linestring"
    properties:
      minzoom: 8
    Datasource:
      <<: *postgis
      geometry_field: way
      table: >
        (
          SELECT
            way,
            name,
            highway as type,
            access
          FROM planet_osm_line
          WHERE way && !bbox!
          AND bridge IN ('yes', 'boardwalk', 'cantilever', 'covered', 'low_water_crossing', 'movable', 'trestle', 'viaduct')
          AND highway IN ('motorway','motorway_link','trunk','trunk_link','primary','primary_link','secondary','secondary_link','tertiary','tertiary_link','road','path','track','service','footway','bridleway','cycleway','steps','pedestrian','living_street','unclassified','residential','raceway')
        ) AS _
  - <<: *layer
    name: road_condition
    id:   road_condition
    geometry: "linestring"
    properties:
      minzoom: 12
    Datasource:
      <<: *postgis
      geometry_field: way
      table: >
        (
          SELECT
            way,
            name as barrier,
            CASE WHEN military = 'checkpoint' OR barrier = 'checkpoint' THEN 'checkpoint'
                 WHEN barrier = 'debris' THEN 'debris'
                 WHEN barrier = 'gate' THEN 'gate'
                 ELSE '' END as class
          FROM planet_osm_point
          WHERE way && !bbox!
            AND (barrier IN ('checkpoint', 'debris','gate')
            OR military = 'checkpoint')
        ) AS _
  - <<: *layer
    name: building_outline
    id:   building_outline
    properties:
      minzoom: 12
    geometry: "polygon"
    Datasource:
      <<: *postgis
      geometry_field: way
      table: >
        (
          -- Make sure this is the same query as the building layer above
          SELECT
            way,
            name,
            CASE WHEN building IS NOT NULL THEN building
                 ELSE aeroway END AS type
          FROM planet_osm_polygon
          WHERE way && !bbox!
          AND (building IS NOT NULL
          OR aeroway IN ('terminal','hangar'))
        ) AS _
  - <<: *layer
    name: sanitation
    id:   sanitation
    geometry: "point"
    properties:
      minzoom: 12
    Datasource:
      <<: *postgis
      geometry_field: way
      table: >
        (
          SELECT
            way,
            name,
            CASE WHEN amenity = 'shower' THEN 'shower'
                 WHEN amenity = 'toilets' THEN 'toilet'
                 WHEN amenity IN ('waste_disposal','waste_basket','sanitary_dump_station') OR landuse = 'landfill' OR man_made = 'wastewater_plant' OR tags->'informal' = 'dumpsite' THEN 'waste'
                 ELSE '' END as class
          FROM planet_osm_point
          WHERE way && !bbox!
            AND (amenity IN ('shower', 'toilets','waste_disposal','waste_basket','sanitary_dump_station')
            OR landuse = 'landfill'
            OR man_made = 'wastewater_plant'
            OR tags->'informal' = 'dumpsite')
        ) AS _
  - <<: *layer
    name: sanitation_poly
    id:   sanitation_poly
    geometry: "polygon"
    properties:
      minzoom: 12
    Datasource:
      <<: *postgis
      geometry_field: way
      table: >
        (
          SELECT
            way,
            name,
            CASE WHEN amenity = 'shower' THEN 'shower'
                 WHEN amenity = 'toilets' THEN 'toilet'
                 WHEN amenity IN ('waste_disposal','waste_basket','sanitary_dump_station') OR landuse = 'landfill' OR man_made = 'wastewater_plant' OR tags->'informal' = 'dumpsite' THEN 'waste'
                 ELSE '' END as class
          FROM planet_osm_polygon
          WHERE way && !bbox!
            AND (amenity IN ('shower', 'toilets','waste_disposal','waste_basket','sanitary_dump_station')
            OR landuse = 'landfill'
            OR man_made = 'wastewater_plant'
            OR tags->'informal' = 'dumpsite')
        ) AS _
  - <<: *layer
    name: water_source
    id:   water_source
    geometry: "polygon"
    properties:
      minzoom: 10
    Datasource:
      <<: *postgis
      geometry_field: way
      table: >
        (
          SELECT
            way,
            name,
            CASE WHEN man_made = 'water_well' THEN 'water well'
                 WHEN man_made = 'water_tower' THEN 'water tower'
                 WHEN man_made IN ('storage_tank','water_tank') THEN 'water tower'
                 WHEN "natural" = 'spring' THEN 'spring'
                 WHEN amenity = 'drinking_water' THEN 'drinking water'
                 ELSE '' END as class,
            CASE WHEN tags->'drinking_water' = 'yes' OR amenity = 'drinking_water' THEN 'yes'
                 WHEN tags->'drinking_water' = 'no' THEN 'no'
                 ELSE '' END as potable,
            CASE WHEN tags->'pump' = 'yes' THEN 'yes'
                 WHEN tags->'pump' = 'manual' OR tags->'pump_type' = 'manual' THEN 'manual'
                 WHEN tags->'pump' = 'powered' OR tags->'pump_type' = 'powered_network' THEN 'powered'
                 ELSE '' END as pump
          FROM planet_osm_polygon
          WHERE way && !bbox!
            AND (man_made IN ('water_well', 'water_tower','storage_tank','water_tank')
            OR "natural" = 'spring'
            OR amenity = 'drinking_water')
        ) AS _
  - <<: *layer
    name: emergency
    id:   emergency
    geometry: "point"
    properties:
      minzoom: 10
    Datasource:
      <<: *postgis
      geometry_field: way
      table: >
        (
          SELECT
            way,
            name,
            CASE WHEN tags->'emergency' IN ('ambulance_station','defibrillator','aed') OR tags->'medical' = 'aed' THEN 'medical rescue'
                 WHEN tags->'emergency' IN ('fire_extinguisher','fire_hydrant','fire_hose','fire_flapper') THEN 'fire fighter'
                 WHEN tags->'emergency' IN ('lifeguard_base','lifeguard_platform','lifeguard_place') THEN 'lifeguarding'
                 WHEN tags->'emergency' = 'assembly_point' THEN 'assembly point'
                 WHEN tags->'emergency' = 'access_point' THEN 'access point'
                 WHEN tags->'emergency' = 'phone' THEN 'emergency phone'
                 WHEN tags->'emergency' = 'siren' THEN 'emergency siren'
                 WHEN aeroway = 'helipad' OR tags->'emergency:helipad' = 'potential' OR tags->'emergency' = 'landing_site' THEN 'helicopter'
                 ELSE '' END as class
          FROM planet_osm_point
          WHERE way && !bbox!
            AND (tags->'emergency' IN ('ambulance_station','defibrillator','aed','fire_extinguisher','fire_hydrant','fire_hose','fire_flapper','assembly_point','access_point','phone','siren','landing_site')
            OR tags->'medical' = 'aed'
            OR tags->'emergency:helipad' = 'potential'
            OR aeroway = 'helipad')
        ) AS _
  - <<: *layer
    name: emergency_poly
    id:   emergency_poly
    geometry: "polygon"
    properties:
      minzoom: 10
    Datasource:
      <<: *postgis
      geometry_field: way
      table: >
        (
          SELECT
            way,
            name,
            CASE WHEN tags->'emergency' IN ('ambulance_station','defibrillator','aed') OR tags->'medical' = 'aed' THEN 'medical rescue'
                 WHEN tags->'emergency' IN ('fire_extinguisher','fire_hydrant','fire_hose','fire_flapper') THEN 'fire fighter'
                 WHEN tags->'emergency' IN ('lifeguard_base','lifeguard_platform','lifeguard_place') THEN 'lifeguarding'
                 WHEN tags->'emergency' = 'assembly_point' THEN 'assembly point'
                 WHEN tags->'emergency' = 'access_point' THEN 'access point'
                 WHEN tags->'emergency' = 'phone' THEN 'emergency phone'
                 WHEN tags->'emergency' = 'siren' THEN 'emergency siren'
                 WHEN aeroway = 'helipad' OR tags->'emergency:helipad' = 'potential' OR tags->'emergency' = 'landing_site' THEN 'helicopter'
                 ELSE '' END as class
          FROM planet_osm_polygon
          WHERE way && !bbox!
            AND (tags->'emergency' IN ('ambulance_station','defibrillator','aed','fire_extinguisher','fire_hydrant','fire_hose','fire_flapper','assembly_point','access_point','phone','siren','landing_site')
            OR tags->'medical' = 'aed'
            OR tags->'emergency:helipad' = 'potential'
            OR aeroway = 'helipad')
        ) AS _
  - <<: *layer
    name: medical
    id:   medical
    geometry: "polygon"
    properties:
      minzoom: 10
    Datasource:
      <<: *postgis
      geometry_field: way
      table: >
        (
          SELECT
            way,
            name,
            CASE WHEN amenity = 'hospital' THEN 'hospital'
                 WHEN amenity = 'clinic' THEN 'clinic'
                 WHEN tags->'health_facility_type' = 'field_hospital' OR tags->'health_facility:type' = 'field_hospital' THEN 'field hospital'
                 WHEN amenity = 'pharmacy' THEN 'pharmacy'
                 WHEN tags->'health_facility_type' = 'dispensary' OR tags->'health_facility:type' = 'dispensary' THEN 'dispensary'
                 WHEN amenity = 'mortuary' THEN 'morgue'
                 ELSE '' END as class
          FROM planet_osm_polygon
          WHERE way && !bbox!
            AND (amenity IN ('hospital', 'clinic','pharmacy','mortuary')
            OR tags->'health_facility_type' IN ('field_hospital', 'dispensary')
            OR tags->'health_facility:type' IN ('field_hospital', 'dispensary'))
        ) AS _
  - <<: *layer
    name: communication
    id:   communication
    geometry: "point"
    properties:
      minzoom: 12
    Datasource:
      <<: *postgis
      geometry_field: way
      table: >
        (
          SELECT
            way,
            name,
            CASE WHEN "tower:type" = 'communication' OR man_made = 'communications_tower' THEN 'tower'
                 WHEN man_made = 'communications_dish' THEN 'dish'
                 WHEN amenity = 'community_information_kiosk' OR tags->'board_type' = 'notice' THEN 'notice board'
                 ELSE '' END as class
          FROM planet_osm_point
          WHERE way && !bbox!
            AND (man_made IN ('communications_tower', 'communications_dish')
            OR amenity = 'community_information_kiosk'
            OR "tower:type" = 'communication'
            OR tags->'board_type' = 'notice')
        ) AS _
  - <<: *layer
    name: electric_utility
    id:   electric_utility
    geometry: "point"
    properties:
      minzoom: 12
    Datasource:
      <<: *postgis
      geometry_field: way
      table: >
        (
          SELECT
            way,
            name,
            CASE WHEN power = 'generator' THEN 'generator'
                 WHEN power IN ('tower','pole','line','minor_line') THEN 'transmission'
                 WHEN power IN ('station','substation','sub_station','transformer') THEN 'distribution'
                 ELSE '' END as class,
            "generator:source" AS power_source,
            CASE WHEN power = 'tower' THEN 'tower'
                 WHEN power = 'pole' THEN 'pole'
                 WHEN power IN ('line','minor_line') THEN 'line'
                 ELSE '' END as structure
          FROM planet_osm_point
          WHERE way && !bbox!
            AND power IN ('generator','tower','pole','line','minor_line','station','substation','sub_station','transformer')
        ) AS _
  - <<: *layer
    name: electric_utility_line
    id:   electric_utility_line
    geometry: "linestring"
    properties:
      minzoom: 12
    Datasource:
      <<: *postgis
      geometry_field: way
      table: >
        (
          SELECT
            way,
            name,
            CASE WHEN power = 'generator' THEN 'generator'
                 WHEN power IN ('tower','pole','line','minor_line') THEN 'transmission'
                 WHEN power IN ('station','substation','sub_station','transformer') THEN 'distribution'
                 ELSE '' END as class,
            "generator:source" AS power_source,
            CASE WHEN power = 'tower' THEN 'tower'
                 WHEN power = 'pole' THEN 'pole'
                 WHEN power IN ('line','minor_line') THEN 'line'
                 ELSE '' END as structure
          FROM planet_osm_line
          WHERE way && !bbox!
            AND power IN ('generator','tower','pole','line','minor_line','station','substation','sub_station','transformer')
        ) AS _
  - <<: *layer
    name: electric_utility_poly
    id:   electric_utility_poly
    geometry: "polygon"
    properties:
      minzoom: 12
    Datasource:
      <<: *postgis
      geometry_field: way
      table: >
        (
          SELECT
            way,
            name,
            CASE WHEN power = 'generator' THEN 'generator'
                 WHEN power IN ('tower','pole','line','minor_line') THEN 'transmission'
                 WHEN power IN ('station','substation','sub_station','transformer') THEN 'distribution'
                 ELSE '' END as class,
            "generator:source" AS power_source,
            CASE WHEN power = 'tower' THEN 'tower'
                 WHEN power = 'pole' THEN 'pole'
                 WHEN power IN ('line','minor_line') THEN 'line'
                 ELSE '' END as structure
          FROM planet_osm_polygon
          WHERE way && !bbox!
            AND power IN ('generator','tower','pole','line','minor_line','station','substation','sub_station','transformer')
        ) AS _
  - id: admin
    name: admin
    geometry: "linestring"
    Datasource:
      <<: *postgis
      geometry_field: way
      table: >
        (SELECT
            way,
            admin_level::integer as admin_level
          FROM planet_osm_line
          WHERE boundary = 'administrative'
            AND admin_level IN ('0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '10')
          ORDER BY admin_level::integer DESC -- With 10 as a valid value, we need to do a numeric ordering, not a text ordering
        ) AS _
#  - country_label_line
#  - country_label
#  - marine_label
#  - state_label

  - <<: *layer
    id: place_label
    name: place_label
    properties:
      minzoom: 8
    geometry: "point"
    Datasource:
      <<: *postgis
      table: |-
        (SELECT
            way,
            place as type,
            population,
            name,
            ref
          FROM planet_osm_point
          WHERE way && !bbox!
            AND place IN ('city', 'town', 'suburb', 'village', 'hamlet', 'neighbourhood', 'locality', 'isolated_dwelling', 'farm', 'junction', 'traffic_signals')
            AND name IS NOT NULL
          ORDER BY CASE
              WHEN place = 'city' THEN 1
              WHEN place = 'town' THEN 2
              WHEN place = 'suburb' THEN 3
              WHEN place = 'village' THEN 4
              WHEN place = 'hamlet' THEN 5
              WHEN place = 'neighbourhood' THEN 6
              WHEN place = 'locality' THEN 7
              WHEN place = 'isolated_dwelling' THEN 8
              WHEN place = 'farm' THEN 9
              WHEN place = 'junction' THEN 10
              WHEN place = 'traffic_signals' THEN 11
            END ASC
        ) AS place_label

#  - water_label
  - <<: *layer
    id: poi_label
    name: poi_label
    properties:
      minzoom: 8
    geometry: "point"
    Datasource:
      <<: *postgis
      table: |-
        (SELECT
            way,
            name,
            CASE WHEN amenity IS NOT NULL THEN amenity
                 WHEN tourism IS NOT NULL THEN tourism
                 WHEN shop IS NOT NULL THEN shop
                 WHEN poi IS NOT NULL THEN poi
                 WHEN place IS NOT NULL THEN place
                 WHEN "natural" IS NOT NULL THEN "natural"
                 WHEN man_made IS NOT NULL THEN man_made
                 ELSE '' END AS type,
            CASE WHEN amenity IN ('bank','bar','cafe','cinema','college','dentist','embassy','fuel','hospital','police','restaurant') THEN amenity
                 WHEN amenity = 'bus_station' THEN 'bus'
                 WHEN amenity = 'doctors' THEN 'hospital'
                 WHEN amenity = 'fast_food' THEN 'fast-food'
                 WHEN amenity = 'fire_station' THEN 'fire-station'
                 WHEN amenity = 'ice_cream' OR shop = 'ice_cream' THEN 'ice-cream'
                 WHEN amenity = 'kindergarten' THEN 'school'
                 WHEN amenity = 'place_of_worship' THEN 'place-of-worship'
                 WHEN amenity = 'pub' THEN 'bar'
                 WHEN amenity = 'public_building' THEN 'building'
                 WHEN amenity = 'swimming_pool' THEN 'swimming'
                 WHEN amenity = 'university' THEN 'college'
                 WHEN amenity = 'townhall' THEN 'town-hall'
                 WHEN amenity IN ('post_box','post_office') THEN 'post'
                 WHEN tourism IN ('museum','zoo') THEN tourism
                 WHEN tourism IN ('hotel','motel','hostel','guest_house') THEN 'lodging'
                 WHEN tourism = 'camp_site' THEN 'campsite'
                 WHEN shop IN ('bakery','bicycle','camera','car','laundry','music') THEN shop
                 WHEN shop IN ('convenience','greengrocer','supermarket') THEN 'grocery'
                 WHEN shop IN ('alcohol','beverages') THEN 'alcohol-shop'
                 WHEN shop = 'art' THEN 'art-gallery'
                 WHEN shop = 'hifi' THEN 'music'
                 WHEN shop IN ('car_parts','car_repair') THEN 'car'
                 WHEN shop = 'clothes' THEN 'clothing-store'
                 WHEN shop = 'mobile_phone' THEN 'mobilephone'
                 WHEN man_made IN ('lighthouse','bicycle','camera') THEN man_made
                 WHEN man_made = 'petroleum_well' THEN 'oil-well'
                 WHEN man_made = 'obelisk' THEN 'monument'
                 WHEN man_made IS NOT NULL THEN 'square'
                 WHEN shop IS NOT NULL THEN 'shop'
                 ELSE '' END AS maki
          FROM planet_osm_point
          WHERE way && !bbox!
            AND (place IS NULL OR place NOT IN ('city', 'town', 'suburb', 'village', 'hamlet', 'neighbourhood', 'locality', 'isolated_dwelling', 'farm', 'junction', 'traffic_signals','country', 'county', 'region', 'state'))
        UNION ALL
        SELECT
            way,
            name,
            CASE WHEN amenity IS NOT NULL THEN amenity
                 WHEN tourism IS NOT NULL THEN tourism
                 WHEN shop IS NOT NULL THEN shop
                 WHEN place IS NOT NULL THEN place
                 WHEN "natural" IS NOT NULL THEN "natural"
                 WHEN man_made IS NOT NULL THEN man_made
                 ELSE '' END AS type,
            CASE WHEN amenity IN ('bank','bar','cafe','cinema','college','dentist','embassy','fuel','hospital','police','restaurant') THEN amenity
                 WHEN amenity = 'bus_station' THEN 'bus'
                 WHEN amenity = 'doctors' THEN 'hospital'
                 WHEN amenity = 'fast_food' THEN 'fast-food'
                 WHEN amenity = 'fire_station' THEN 'fire-station'
                 WHEN amenity = 'ice_cream' OR shop = 'ice_cream' THEN 'ice-cream'
                 WHEN amenity = 'kindergarten' THEN 'school'
                 WHEN amenity = 'place_of_worship' THEN 'place-of-worship'
                 WHEN amenity = 'pub' THEN 'bar'
                 WHEN amenity = 'public_building' THEN 'building'
                 WHEN amenity = 'swimming_pool' THEN 'swimming'
                 WHEN amenity = 'university' THEN 'college'
                 WHEN amenity = 'townhall' THEN 'town-hall'
                 WHEN amenity IN ('post_box','post_office') THEN 'post'
                 WHEN tourism IN ('museum','zoo') THEN tourism
                 WHEN tourism IN ('hotel','motel','hostel','guest_house') THEN 'lodging'
                 WHEN tourism = 'camp_site' THEN 'campsite'
                 WHEN shop IN ('bakery','bicycle','camera','car','laundry','music') THEN shop
                 WHEN shop IN ('convenience','greengrocer','supermarket') THEN 'grocery'
                 WHEN shop IN ('alcohol','beverages') THEN 'alcohol-shop'
                 WHEN shop = 'art' THEN 'art-gallery'
                 WHEN shop = 'hifi' THEN 'music'
                 WHEN shop IN ('car_parts','car_repair') THEN 'car'
                 WHEN shop = 'clothes' THEN 'clothing-store'
                 WHEN shop = 'mobile_phone' THEN 'mobilephone'
                 WHEN man_made IN ('lighthouse','bicycle','camera') THEN man_made
                 WHEN man_made = 'petroleum_well' THEN 'oil-well'
                 WHEN man_made = 'obelisk' THEN 'monument'
                 WHEN man_made IS NOT NULL THEN 'square'
                 WHEN shop IS NOT NULL THEN 'shop'
                 ELSE '' END AS maki
          FROM planet_osm_polygon
          WHERE way && !bbox!
        ) AS poi_label
#  - hdm_label
  - <<: *layer
    id: road_label
    name: road_label
    geometry: "linestring"
    properties:
      minzoom: 12
    Datasource:
      <<: *postgis
      table: |-
        (SELECT way, osm_id, name,
            highway as class,
            ST_Length(way) as len
            FROM planet_osm_line
            WHERE
            way && !bbox!
            AND highway IS NOT NULL
            AND name IS NOT NULL
        ) AS data
  - <<: *layer
    id: roads-text-ref
    name: roads-text-ref
    class: ""
    geometry: "linestring"
    properties:
      minzoom: 10
    Datasource:
      <<: *postgis
      table: |-
       --(SELECT * FROM
       (SELECT
         way,
         highway,
         orig_ref,
         array_length(refs,1) AS height,
         regexp_replace(orig_ref, '\s*;\s*', E'\n', 'g') AS refs,
         MAX(ref_width) as reflen
       FROM (
         SELECT way, highway, orig_ref, refs, ref, SUM(CASE WHEN ascii_val < 255 THEN 1 ELSE 2 END) AS ref_width
         FROM (
           SELECT way, highway, orig_ref, refs, ref, ascii(unnest(string_to_array(ref,NULL))) as ascii_val
           FROM (
             SELECT way, highway, orig_ref, refs, trim(both from unnest(refs)) AS ref
             FROM (
               SELECT
                       way,
                       COALESCE(
                         CASE WHEN highway IN ('motorway', 'trunk', 'primary', 'secondary', 'tertiary', 'unclassified', 'residential') THEN highway ELSE NULL END,
                         CASE WHEN aeroway IN ('runway', 'taxiway') THEN aeroway ELSE NULL END
                       ) AS highway,
                       ref as orig_ref,
                       string_to_array(ref, ';') AS refs
                     FROM planet_osm_line
                       WHERE way && !bbox!
                         AND (highway IN ('motorway', 'trunk', 'primary', 'secondary', 'tertiary', 'unclassified', 'residential') OR aeroway IN ('runway', 'taxiway'))
                         AND ref IS NOT NULL AND ref LIKE '%;%'
             ) AS query
           ) AS query2
         ) AS query3
         GROUP BY way, highway, orig_ref, refs, ref
       ) AS query4
       GROUP BY way, highway, orig_ref, refs) as innerquery
       --WHERE height <= 4 AND width <= 11) as roads_text_ref
#  - waterway_label
  - <<: *layer
    id: housenum_label
    name: housenum_label
    geometry: "point"
    properties:
      minzoom: 18
    Datasource:
      <<: *postgis
      table: |-
        (SELECT way, osm_id, house_num
          FROM
          (
            SELECT way, osm_id, "addr:housenumber" as house_num
            FROM planet_osm_point
            WHERE
            way && !bbox!
            AND "addr:housenumber" IS NOT NULL
            UNION ALL
            SELECT ST_Centroid(way) as way, osm_id, "addr:housenumber" as house_num
            FROM planet_osm_polygon
            WHERE
            way && !bbox!
            AND "addr:housenumber" IS NOT NULL
          ) AS housenumbers
        ) AS data
